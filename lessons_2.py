# -*- coding: utf-8 -*-
"""Lessons_2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/13qfrSdu4g7UGPEnBLKaOB1nQ9xXa22KZ

1) cортирует список, состоящий из списков, по второму элементу этих
вложенных списков (по возрастанию);
"""

lst = [[1,3,3,4], [2,1,3,5], [4,0,1,7], [5,2,1,0], [0,4,8,3]]

def sort_key(e):
  return e[1]

print(sorted(lst, key=sort_key))

lst2 = sorted(lst, key=sort_key)
print(lst2)

"""2) cоздает словарь, ключами в котором являются вторые элемент отсор-
тированной структуры данных (из пункта 1), а значениями – списки из
остальных элементов (первый, третий, четвертый);

"""

key = [0, 1, 2, 3, 4]
value = [[4, 1, 7], [2, 3, 5], [5, 1, 0], [1, 3, 4], [0, 8, 3]]
D = {k:v for k, v in zip(key, value)}
print(D)

"""3) сортирует значения полученного словаря (списки) по убыванию;"""

Ks = list(D.keys())
print(Ks)
Ks.reverse()
print(Ks)

print('\n')

for key in sorted(D, reverse=True):
  print(key, '=>', D[key])

print(D.values())
dv = list(D.values())

"""4) получает множество из всех значений (отсортированных списков)
полученного словаря;

"""

print(D.items())
m = set(D)
print(m)

"""5) преобразует множество в строку."""

ln = list(m)
print(*list(ln))
print(" ".join(map(str,ln)))